mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing plot
df %>%
ggplot(aes(age, score, color = education)) +
geom_point() # x is age, y is score, color is education for scatter plot +
geom_smooth(method = "lm")
library(data.table)
library(tidyverse)
ageplot <- df %>%
ggplot(aes(fct_reorder(region, age, mean), age)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip() +
labs(title = "Mean ages by region", subtitle = "Lines show standard error of the mean", x = "Region", y = "Age")
ageplot
# variable class transformations
df <- df %>%
mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing plot
df %>%
ggplot(aes(age, score, color = education)) +
geom_point() # x is age, y is score, color is education for scatter plot +
geom_smooth(method = "lm", se = FALSE)
# variable class transformations
df <- df %>%
mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing plot
df %>%
ggplot(aes(age, score, color = education)) +
geom_point() +
geom_smooth(method = "lm")
# variable class transformations
df <- df %>%
mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing scatter plot that have three regression lines
df %>%
ggplot(aes(age, score, color = education)) +
geom_jitter() +
geom_smooth(method = "lm")
# variable class transformations
df <- df %>%
mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing scatter plot that have three regression lines
df %>%
ggplot(aes(age, score, color = education)) +
geom_point() +
geom_smooth(method = "lm")
df_stats %>%
ggplot(aes(x = education, y = mean_score, fill = age_group)) +
geom_col(position = "dodge")
# Calculate mean, sd and number of observation (n)
df_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
glimpse(df)
summary(df)
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# Calculate mean, sd and number of observation (n)
df_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
count(age_group)
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
summary(df)
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('-10','11-20','21-')))
df <- df %>%
mutate(score_group = cut_width(score, 10, boundary = 0, labels = c('-10','11-20','21-')))
# read "region_scores.csv"data
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/region_scores.csv')
df
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('-10','11-20','21-')))
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('0-10','11-20','21-')))
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('11-20','21-30','31-40','41-50','51-60','61=70')))
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('-10','11-20','21-30','31-40','41-50','51-60','61=70')))
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('11-20','21-30','31-40','41-50','51-60','61=70')))
# Calculate mean, sd and number of observation (n)
df_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
df_stats
# Calculate mean, sd and number of observation (n)
df_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
df_stats
# calculate standard error
df_stats %>%
mutate(se = sd_age/sqrt(n))
# Calculate mean, sd and number of observation (n)
df_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
df_stats
# calculate standard error
df_stats %>%
mutate(se = sd_score/sqrt(n))
# Calculate mean, sd and number of observation (n)
edu_age_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
df_stats
# calculate standard error
edu_age_stats %>%
mutate(se = sd_score/sqrt(n))
# Calculate mean, sd and number of observation (n)
edu_age_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
edu_age_stats
# calculate standard error
edu_age_stats %>%
mutate(se = sd_score/sqrt(n))
edu_age_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
se = sd_score/sqrt(n)
n = n()) %>%
# Calculate mean, sd and number of observation (n)
edu_age_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
edu_age_stats
# calculate standard error
edu_age_stats %>%
mutate(se = sd_score/sqrt(n))
edu_age_stats %>%
ggplot(aes(age_group, mean_score)) +
geom_col() +
facet_wrap(~education) +
geom_errorbar(aes(ymin = mean_score - se, ymax = mean_score + se))
# Calculate mean, sd and number of observation (n)
edu_age_stats <- df %>%
group_by(education, age_group, .drop = FALSE) %>%
summarise(mean_score = mean(score),
sd_score = sd(score),
n = n()) %>%
ungroup()
edu_age_stats
# calculate standard error
edu_age_stats <- edu_age_stats %>%
mutate(se = sd_score/sqrt(n))
edu_age_stats %>%
ggplot(aes(age_group, mean_score)) +
geom_col() +
facet_wrap(~education) +
geom_errorbar(aes(ymin = mean_score - se, ymax = mean_score + se))
df %>%
ggplot(aes(score, region)) +
geom_boxplot()
edu_age_stats %>%
ggplot(aes(score, region)) +
geom_boxplot()
glimpse(df)
summary(df)
# cut age to age_group with width 10
df %>%
mutate(age_group = cut_width(age, 10, boundary = 0)) %>%
count(age_group)
# save age_group
df <- df %>%
mutate(age_group = cut_width(age, 10, boundary = 0, labels = c('11-20','21-30','31-40','41-50','51-60','61=70')))
# variable class transformations
df <- df %>%
mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing scatter plot that have three regression lines
df %>%
ggplot(aes(age, score, color = education)) +
geom_point() +
geom_smooth(method = "lm")
df %>%
ggplot(aes(score, region)) +
geom_boxplot()
df %>%
ggplot(aes(score, region)) +
geom_boxplot()+
facet_wrap(~age_group)
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()+
facet_wrap(~age_group)
# variable class transformations
df <- df %>%
mutate(id = as.character(id),
region = factor(region),
education = factor(education, ordered = TRUE),
gender = factor(gender))
# producing scatter plot that have three regression lines
df %>%
ggplot(aes(age, score, color = education)) +
geom_point() +
geom_smooth(method = "lm")
#encode region??
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()+
facet_wrap(~age_group)
df <- data.table::fread('data/region_scores.csv')
df %>%
distinct(region)
df <- data.table::fread('data/region_scores.csv')
df %>%
distinct(region)
guess_encoding('data/region_scores.csv')
df %>%
distinct(region)
#encode region??
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "ISO-8859-1"))
df %>%
distinct(region)
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()+
facet_wrap(~age_group)
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "ISO-8859-1"))
df %>%
distinct(region)
df <- data.table::fread('data/region_scores.csv')
df %>%
distinct(region)
#encode region??
df <- data.table::fread('data/region_scores.csv')
df %>%
distinct(region)
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()+
facet_wrap(~age_group)
#encode region??
df <- data.table::fread('data/region_scores.csv')
df %>%
distinct(region)
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "UTF-8"))
df %>%
distinct(region)
# encode region
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "Latin-1"))
# encode region
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "Latin1"))
df %>%
distinct(region)
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>% # see what happens with summarise(mean_age = mean(age))
ungroup()
df
df <- df %>%
group_by(region) %>%
summarise(mean_score = mean(score)) %>% # see what happens with summarise(mean_age = mean(age))
ungroup()
df
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>% # see what happens with summarise(mean_age = mean(age))
ungroup()
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>% # see what happens with summarise(mean_age = mean(age))
ungroup()
# encode region
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "Latin1"))
# check the result
df %>%
distinct(region)
# create a boxplot
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>% # see what happens with summarise(mean_age = mean(age))
ungroup()
df
df <- df %>%
group_by(region) %>%
summarise(mean_score = mean(score)) %>%
ungroup()
df
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>%
ungroup()
# encode region
df <- readr::read_csv('data/region_scores.csv', locale = locale(encoding = "Latin1"))
# check the result
df %>%
distinct(region)
# create a boxplot
df %>%
ggplot(aes(x = score, y = region)) +
geom_boxplot()
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>%
ungroup()
df
df <- df %>%
group_by(region) %>%
mutate(mean_score = mean(score)) %>%
ungroup()
# if use summarise, there will only be two variables: region and mean_score
df
df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point") +
coord_flip() +
labs(title = "Mean score by region", x = "mean_score", y = "region")
df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point") +
coord_flip() +
labs(title = "Mean score by region", x = "mean_score", y = "region")
scoreplot <- df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip() +
labs(title = "Mean score by region", subtitle = "Lines show standard error of the mean", x = "Region", y = "mean_core")
scoreplot
scoreplot <- df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip() +
labs(title = "Mean score by region", subtitle = "Lines show standard error of the mean", x = "Region", y = "mean_core")
scoreplot
scoreplot <- df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip() +
labs(title = "Mean score by region", subtitle = "Lines show standard error of the mean", x = "Region", y = "mean_score")
scoreplot
scoreplot <- df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip() +
labs(title = "Mean score by region", subtitle = "Lines show standard error of the mean", x = "Region", y = "Mean_score")
scoreplot
scoreplot <- df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip()
scoreplot
scoreplot <- df %>%
ggplot(aes(fct_reorder(region, score, mean), score)) +
stat_summary(geom = "point", fun.data = "mean_se") +
stat_summary(geom = "linerange", fun.data = "mean_se") +
coord_flip() +
labs(title = "Mean score by region", subtitle = "Lines show standard error of the mean", x = "Region", y = "Mean_score")
scoreplot
library(data.table)
library(tidyverse)
df_stats <- df %>%
group_by(education, score_group, .drop = FALSE) %>% # there are no observations some of the combinations, but we don't want to drop them
summarise(mean_age = mean(age),
sd_age = sd(age),
n = n()) %>%
ungroup()
library(data.table)
library(tidyverse)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. the data do not have id variable which should be added; 2. the missing values in the gender variable coded by 999 which should be re-coded to NA; 3. the group and gender variables need to change to factors; 4. the score2 need to be converted to numerical variable which was done in later exercise.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert group and gender variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = (score1), score2 = (score2))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange((n)) # the default setting is ascending, arragne (n) is arrange by observations, and if use some variables would change the results
