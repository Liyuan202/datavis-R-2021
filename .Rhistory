class(df_new$date)
df_new <- df_new[order(df_new$date)]
df_new %>%
distinct(indivID, date) %>%
arrange(date) %>%
count(date)
class(df_new$date)
df_new <- df_new[order(df_new$date)]
df_new <- df_new[order(df_new$date)]
df_new <- df_new[order(df_new$date),]
df_new <- df_new[order(df_new$date),]
df_new <- df_new[order(df_new$date),]
class(df_new$date)
df_new <- df_new[order(df_new$date),]
class(df_new$date)
df_new$date <- as.date(df_new$date, format = "%Y-%m-%d")
# Other way
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
sort(date)
df_new %>%
distinct(indivID, date) %>%
arrange(date) %>%
count(date)
# Other way
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrage(date)
# Other way
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
class(df_new$date)
df_new$date <- as.date(df_new$date, format = "%Y-%m-%d")
# Other way
df_new_new <- df_new %>%
select(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
# Other way
df_new_new <- df_new %>%
unique(df_new, indivID, date) %>%
count(date) %>%
arrange(date)
# Other way
df_new_new <- df_new %>%
unique(df_new, indivID, date) %>%
count(date) %>%
arrange(date)
# Other way
df_new_new <- df_new %>%
select(indivID) %>%
count(date) %>%
arrange(date)
# Other way
df_new_new <- df_new %>%
select(date) %>%
count(date) %>%
arrange(date)
df_new_new
# Other way
df_new_new <- df_new %>%
select(date) %>%
count(indivID) %>%
arrange(date)
df_new %>%
distinct(indivID, date) %>%
arrange(date) %>%
count(date)
# Other way
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
unique(df_new, by = c("indivID","date"))[, .N, by = date]
unique(df_new, by = c("indivID","date"))
# Other way
df_new_new <- df_new %>%
summarise(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
# Other way
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
# Other way
df_new_new <- df_new %>%
n_distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_aaa <- df_new[ ,.(count = length(unique(x))), by = indivID]
df_aaa <- df_new[ ,.(count = length(unique(date))), by = indivID]
df_aaa <- df_new[ ,.(count = length(date), by = indivID]
df_aaa <- df_new[ ,. (count = length(date), by = indivID]
# Other way
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
df_new %>%
count(indivID)
df_new %>%
unique.data.frame(df_new)
df_new %>%
unique(df_new)
unique(df_new)
unique(indivID)
unique(df_new, indivID)
df_new %>%
count(indivID)
n_distinct()
df_new %>%
table(df_new$indivID)
table(df_new$indivID)
df_participant <- df_new %>%
group_by(indivID) %>%
summarise(n = n()) %>%
ungroup()
df_participant
glimpse(df_participant)
glimpse(df_participant)
df_new %>%
summarise(n = n())
df_new %>%
summarise(indivID = n())
df_participant <- df_new %>%
group_by(indivID) %>%
summarise(n = n()) %>%
ungroup()
df_participant
glimpse(df_participant)
df_new %>%
summarise(indivID)
n_distinct()
table(df_new$indivID)
count(indivID)
df_new %>%
summarise(indivID)
n_distinct()
df_uniq <- unique(df_new)
length(df_uniq)
df_new
library(dplyr)
n_distinct(df_new$indivID)
df_new %>%
distinct(indivID)
df_new %>%
group_by(indivID)
count(date)
df_new %>%
distict(indivID)
tidytime %>%
group_by(indivID) %>% # group by indivID
mutate(start_date = min(date)) %>% #calculate the min of date
ungroup %>% # ungroup the group by indivID above
mutate(indivID = factor(indivID), # change indivID to factor variable
indivID = fct_reorder(indivID, start_date) %>% fct_rev()) %>% # reorder and reverse the order
ggplot(aes(date, indivID, colour = month(start_date, label = T))) +  # x axis is date, y axis is indivID, and colour will depend on month
geom_line() + # draw a line
geom_point(size=.5, alpha=.1) + # used to create scatterplots
theme_bw() + # simple black and white theme
scale_y_discrete(breaks = "none") +
labs(x = "Date", y = "", colour = "Starting month") # name x "Date", and use "Starting month" as different color
df_new %>%
group_by(indivID) %>% # group by indivID
mutate(start_date = min(date)) %>% #calculate the min of date
ungroup %>% # ungroup the group by indivID above
mutate(indivID = factor(indivID), # change indivID to factor variable
indivID = fct_reorder(indivID, start_date) %>% fct_rev()) %>% # reorder and reverse the order
ggplot(aes(date, indivID, colour = month(start_date, label = T))) +  # x axis is date, y axis is indivID, and colour will depend on month
geom_line() + # draw a line
geom_point(size=.5, alpha=.1) + # used to create scatterplots
theme_bw() + # simple black and white theme
scale_y_discrete(breaks = "none") +
labs(x = "Date", y = "", colour = "Starting month") # name x "Date", and use "Starting month" as different color
df_new %>%
group_by(indivID)
count(date)
df_new %>%
group_by(indivID)
summarise(n = n()) %>%
ungroup()
library(tidyverse)
fss %>%
group_by(gender, .drop = FALSE) %>%
summarise(n = n()) %>%
ungroup()
# The frequencies of gender seems quite balanced.
df_new %>%
group_by(indivID)
summarise(n = n()) %>%
ungroup()
df_new %>%
group_by(indivID, .drop = FALSE) %>%
summarise(n = n()) %>%
ungroup()
df_new %>%
group_by(indivID, .drop = FALSE) %>%
summarise(n = n()) %>%
ungroup()
count(date)
df_new %>%
group_by(indivID, .drop = FALSE) %>%
summarise(n = n()) %>%
ungroup()
count(date)
df_new %>%
group_by(indivID, .drop = FALSE) %>%
summarise(n = n()) %>%
count(date)
df_new %>%
group_by(indivID, .drop = FALSE) %>%
summarise(n = n()) %>%
count(date) %>%
ungroup()
df_new %>%
group_by(indivID, .drop = FALSE) %>%
summarise(date) %>%
count(date) %>%
ungroup()
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
arrange(date)
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
arrange(n)
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
arrange((n))
df_new %>%
group_by(indivID) %>%
summarise(count_date = n()) %>%
arrange((n))
df_new %>%
group_by(indivID) %>%
summarise(count_date = n()) %>%
arrange(date)
df_new %>%
group_by(indivID) %>%
summarise(count_date = n()) %>%
sort(date)
df_new %>%
group_by(indivID) %>%
summarise(count_date = n()) %>%
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
df_new
count(indivID,date)
df_new %>%
count(indivID,date)
# Other way (need to go back and see what others)
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
df_new %>%
group_by(indivID) %>%
summarise(count_date = n())
df_new %>%
count(indivID,date)
df_new %>%
group_by(date) %>%
summarise(count_date = n())
df_new %>%
group_by(indivID, date) %>%
summarise(count_date = n())
df_new %>%
group_by(indivID, date) %>%
summarise(count = n())
df_new %>%
select(c(indivID, date)) %>%
arrange(date) %>%
count(date)
df_new %>%
select(c(indivID, date)) %>%
arrange(date)
df_new %>%
select(c(indivID, date)) %>%
group_by(indivID) %>%
arrange(date)
df_new %>%
select(c(indivID, date)) %>%
group_by(indivID) %>%
arrange(date) %>%
count(date)
df_new %>%
select(c(indivID, date)) %>%
group_by(indivID,date) %>%
arrange(date) %>%
count(date)
df_new %>%
group_by(date, indivID) %>%
summarise(count = n())
# Other way (need to go back and see what others)
df_new_new <- df_new %>%
distinct(indivID, date) %>%
count(date) %>%
arrange(date)
df_new_new
df_new %>%
group_by(indivID,date) %>%
summarise(count = n())
df_new %>%
select(c(indivID, date)) %>%
group_by(indivID,date) %>%
arrange(date) %>%
count(date)
df_new %>%
group_by(indivID,date) %>%
summarise(count = n())
df_new %>%
group_by(date) %>%
summarise(count = n())
df_new %>%
select(c(indivID, date)) %>%
group_by(indivID) %>%
arrange(date) %>%
count(date)
df_new %>%
select(c(indivID, date)) %>%
group_by(indivID) %>%
summarise(count = n()) %>%
arrange(date) %>%
count(date)
df_new %>%
select(c(indivID, date)) %>%
group_by(date) %>%
summarise(uniqueid = n_distinct(indivID))
# Other way (need to go back and see what others)
df_new_new <- df_new %>%
select(c(indivID, date)) %>%
group_by(date) %>%
summarise(uniqueid = n_distinct(indivID))
# Other way (need to go back and see what others)
df_new_new <- df_new %>%
select(c(indivID, date)) %>%
group_by(date) %>%
summarise(uniqueid = n_distinct(indivID))
# Other way (need to go back and see what others)
df_new_new <- df_new %>%
select(c(indivID, date)) %>%
group_by(date) %>%
summarise(uniqueid = n_distinct(indivID))
df_new_new
# Other way (need to go back and see what others)
df_new_new <- df_new %>%
select(c(indivID, date)) %>%
group_by(date) %>%
summarise(n = n_distinct(indivID))
df_new_new
# Read data
library(datasets)
anscombe
str(anscombe)
summary(anscombe)
# Visualization
anscombe %>%
rowwise() %>%
mutate(x = sum(c(x1, x2, x3, x4))) -> anscombe
anscombe %>%
rowwise() %>%
mutate(x = sum(c(x1, x2, x3, x4))) -> anscombe
anscombe %>%
rowwise() %>%
mutate(x = mean(c(x1, x2, x3, x4))) -> anscombe
# Read data
library(datasets)
anscombe
str(anscombe)
summary(anscombe)
# Visualization
anscombe %>%
rowwise() %>%
mutate(x = mean(c(x1, x2, x3, x4))) -> anscombe
mean(x1)
anscombe %>%
mean(x1)
anscombe
library(tidyverse)
set.seed(1)
df <- tibble(participant = factor(1:10),
group = factor(rep(c('Control', 'Treatment'), 5)),
session1 = rnorm(10, 5.5, 2),
session2 = rnorm(10, 6, 3),
session3 = rnorm(10, 6, 4))
df
df %>%
gather(session, value) # wrong
# many ways to write the same thing:
# exclude participant and group with -
df %>%
gather(session, value, -participant, -group)
# or include session1, session2 and session3
df %>%
gather(session, value, session1:session3)
# or specify a condition
df_long <- df %>%
gather(session, value, starts_with("session"))
df_long
df_long %>%
ggplot(aes(session, value, group = participant, colour = participant)) +
geom_line(alpha=.7) +
geom_point() +
facet_wrap(~group) + theme_bw()
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning(1).csv')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning.csv')
# load library
library(data.table)
library(tidyverse)
# read "region_scores.csv"data
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/region_scores.csv')
df
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("tidyverse")
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning (1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/region_scores.csv')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- readr::read_csv('fss_learning(1).csv')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- readr::read_csv('fss_learning.csv')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- read.csv('fss_learning(1).csv', header = TRUE)
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- read.csv('fss_learning(1).csv')
fss <- read_csv("C:/Users/eliyuan/Documents/GitHub/datavis-R-2022/fss_learning(1).csv")
fss <- read_csv("C:/Users/eliyuan/Documents/GitHub/datavis-R-2021/fss_learning(1).csv")
fss <- read_csv("C:/Users/eliyuan/Documents/GitHub/datavis-R-2022/fss_learning(1).csv")
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/fss_learning(1).csv')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/fss_learning(1).csv')
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/fss_learning(1).csv')
