fss <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning(1).csv')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss_learning <- readr::read_csv('data/fss_learning.csv')
# load library
library(data.table)
library(tidyverse)
# read "region_scores.csv"data
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/region_scores.csv')
df
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("tidyverse")
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning(1).csv')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning (1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/region_scores.csv')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- readr::read_csv('fss_learning(1).csv')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- readr::read_csv('fss_learning.csv')
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- read.csv('fss_learning(1).csv', header = TRUE)
setwd('C:/Users/eliyuan/Documents/GitHub/datavis-R-2022')
list.files('data')
fss <- read.csv('fss_learning(1).csv')
fss <- read_csv("C:/Users/eliyuan/Documents/GitHub/datavis-R-2022/fss_learning(1).csv")
fss <- read_csv("C:/Users/eliyuan/Documents/GitHub/datavis-R-2021/fss_learning(1).csv")
fss <- read_csv("C:/Users/eliyuan/Documents/GitHub/datavis-R-2022/fss_learning(1).csv")
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/fss_learning(1).csv')
# load library
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/fss_learning(1).csv')
library(data.table)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- readr::read_csv('data/fss_learning(1).csv')
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning (1).csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
plot(cars)
library(tidyverse)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
read.csv(“fss_learning.csv”， stringaAsFactors = FALSE)
read.csv(“fss_learning.csv”， stringaAsFactors = FALSE)
> read.csv(“fss_learning.csv”， stringaAsFactors = FALSE)
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
df <- read.csv(“fss_learning.csv”， stringaAsFactors = FALSE)
df <- read.csv(“fss_learning.csv”, stringaAsFactors = FALSE)
df <- read.csv('fss_learning.csv', stringaAsFactors = FALSE)
df <- read.csv('fss_learning.csv')
list.files('C:/Users/eliyuan/Documents/GitHub')
df <- read.csv('fss_learning.csv')
fss <- read.csv(file.choose())
fss <- read.csv(file.choose())
fss
list.files('C:/Users/eliyuan/Documents/GitHub')
fss <- readr::read_csv('data/fss_learning.csv')
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant))
# participant-wise
fss %>%
group_by(participant) %>%
scale(center = T, scale = T)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise <- fss %>%
group_by(participant) %>%
standardise()
fss_wise <- function(fss)
fss %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(5)
fss_wise
library(datawizard)
install.packages("datawizard")
install.packages("effectsize")
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
# participant-wise
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise <- function(fss)
fss %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(5)
fss_wise
# participant-wise
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(5)
fss_wise
# participant-wise
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise %>%
group_by(participant) %>%
mutate(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(5)
fss_wise
# participant-wise
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(5)
fss_wise
# participant-wise
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(18)
# participant-wise
library(datawizard)
library(effectsize)
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise_1 <- fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(18)
fss_wise_1
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = numeric(participant))
# participant-wise
library(datawizard)
library(effectsize)
# standardize by participants
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise_1 <- fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(18)
fss_wise_1
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = numeric(participant))
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant)
# import fss_learning data
fss <- read.csv(file.choose())
fss
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = numeric(participant))
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = numeric(participant))
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant))
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant))
# participant-wise
library(datawizard)
library(effectsize)
# standardize by participants
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise_1 <- fss_wise %>%
group_by(participant_I) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(18)
# participant-wise
library(datawizard)
library(effectsize)
# standardize by participants
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise_1 <- fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(18)
fss_wise_1
# participant-wise
library(datawizard)
library(effectsize)
# standardize by participants
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise_1 <- fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
head(18)
fss_wise_1
# participant-wise
library(datawizard)
library(effectsize)
# standardize by participants
fss_wise <- fss %>%
group_by(participant) %>%
standardize()
fss_wise_1 <- fss_wise %>%
group_by(participant) %>%
summarise(Mean = mean(flow),
SD = sd(flow)) %>%
mutate_if(is.numeric, round, 2) %>%
head(18)
fss_wise_1
library(tidyverse)
# participant-wise，standardize by participants
fss_wise_1 <- fss_wise %>%
mutate(Z_flow = flow - mean(flow, na.rm = TRUE)/ sd(flow, na.rm = TRUE))
fss_wise_1
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .3, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
# import fss_learning data
fss <- read.csv(file.choose())
fss
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant))
# log-transformed cumrun(x-axis) and duration(y-axis)
fss_wise <- fss %>%
mutate(cumrun_log = log(cumrun+1),
duration_log = log(duration+1))
fss_wise
# participant-wise，standardize by participants
fss_wise_1 <- fss_wise %>%
mutate(Z_flow = flow - mean(flow, na.rm = TRUE)/ sd(flow, na.rm = TRUE))
fss_wise_1
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .3, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .5, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .7, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .9, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .2, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
library(tidyverse)
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant))
# log-transformed cumrun(x-axis) and duration(y-axis)
fss_wise <- fss %>%
mutate(cumrun_log = log(cumrun),
duration_log = log(duration+1))
fss_wise
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .15, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
# log-transformed cumrun(x-axis) and duration(y-axis)
fss_wise <- fss %>%
mutate(cumrun_log = log(cumrun),
duration_log = log(duration+1))
fss_wise
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .15, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
library(tidyverse)
# import fss_learning data
fss <- read.csv(file.choose())
fss
# look at the data
fss
str(fss)
summary(fss)
glimpse(fss)
# transform "participant" to factor variable
fss <- fss %>%
mutate(participant = factor(participant))
# log-transformed cumrun(x-axis) and duration(y-axis)
fss_wise <- fss %>%
mutate(cumrun_log = log(cumrun),
duration_log = log(duration+1))
fss_wise
# log-transformed cumrun(x-axis) and duration(y-axis)
fss_wise <- fss %>%
mutate(cumrun_log = log(cumrun+1),
duration_log = log(duration+1))
fss_wise
# log-transformed cumrun(x-axis) and duration(y-axis)
fss_wise <- fss %>%
mutate(cumrun_log = log(cumrun),
duration_log = log(duration+1))
fss_wise
# participant-wise，standardize by participants
fss_wise_1 <- fss_wise %>%
group_by(participant) %>%
mutate(Z_flow = (flow - mean(flow, na.rm = TRUE))/ sd(flow, na.rm = TRUE)) %>%
ungroup
fss_wise_1
# plot the results
library(ggplot2)
ggplot(data = fss_wise_1, aes(x = cumrun_log, y = duration_log, color = Z_flow))+
geom_point()+
geom_smooth(method = "lm", alpha = .15, color = "red")+
labs(x = "In(Cumulative runs)", y = "In(duration)", title = "Performance in CogCarSim")+
facet_wrap(~participant) +
scale_color_gradient(low = "green", high = "black")+
theme_bw() +
theme(legend.position = "bottom")
