summary(df)
df %>%
distinct(gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 and score1 to 2
options(digits = 2)
df
df
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 and score1 have many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
select(gender)
summary(df)
df %>%
distinct(gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 and score1 to 2
options(digits = 2)
df
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
select(gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 and score1 to 2
options(digits = 2)
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 and score1 have many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 and score1 have many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
select(gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 and score1 to 2
options(digits = 2)
df
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
select(-gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 and score1 to 2
options(digits = 2)
df
df <- df %>%
mutate(age = time_length(interval(birthdate, today()), "years") %>% floor(), # floor rounds downwards
group = na_if(group, 999)) %>%
select(-birthdate)
# recode gender variable 999 to NA (missing)
df(gender == 999) <- NA
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 and score1 have many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# recode gender variable 999 to NA (missing)
df(gender == 999) <- NA
# recode gender variable 999 to NA (missing)
df[gender == 999] <- NA
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df[gender == 999] <- NA
# recode gender variable 999 to NA (missing)
df[gender == 999] <- NA
# recode gender variable 999 to NA (missing)
df[gender == 999] <- NA
# recode gender variable 999 to NA (missing)
library(naniar)
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
select(-gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 to 0
options(digits = 2)
df
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
select(-gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 to 0
options(digits = 0)
df
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
select(-gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 to 0
options(digits = 0)
df
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
select(-gender)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
summary(df)
# cut the decimal places of score2 to 0
options(digits = 0)
df
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
options(digits = 0)
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
options(digits = 0)
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
format(round(score2,0),nsmall = 0)
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
sprintf(score2, fmt = '%＃.0f')
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
sprintf(score2, fmt = '%＃.0f')
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
sprintf(x, fmt = '%#.0f')
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 has many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# recode gender variable 999 to NA (missing)
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# cut the decimal places of score2 to 0
sprintf(score2, fmt = '%#.0f')
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 has many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
df <- df %>%
mutate(gender = na_if(gender, 999)) %>%
select(gender)
str(df)
summary(df)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
summary(df)
# recode gender variable 999 to NA (missing)
df <- df %>%
gender = na_if(gender, 999)) %>%
# recode gender variable 999 to NA (missing)
gender = na_if(gender, 999)) %>%
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999)) %>%
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999)
# recode gender variable 999 to NA (missing)
gender = na_if(gender, 999)
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 and score1 has many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
library(tidyverse)
library(lubridate) # for working with dates
df <- df %>%
mutate(age = time_length(interval(birthdate, today()), "years") %>% floor(), # floor rounds downwards
group = na_if(group, 999)) %>%
select(-birthdate)
set.seed(1)
df  <- tibble(group = sample(c(rep(1:4, each=12), rep(999,2))),
birthdate = c(seq(as.Date('1980/01/01'), as.Date('1990/01/01'), by="day")) %>% sample(50),
gender = sample(c('M', 'F'), 50, replace=TRUE),
attitude = sample(c('Strongly disagree', 'Disagree', 'Neither agree or disagree', 'Agree', 'Strongly agree'), 50, replace=TRUE))
df
df %>% summary()
df <- df %>%
mutate(age = time_length(interval(birthdate, today()), "years") %>% floor(), # floor rounds downwards
group = na_if(group, 999)) %>%
select(-birthdate)
df <- df %>%
group = na_if(group, 999)) %>%
df %>%
group = na_if(group, 999)) %>%
df %>%
group = na_if(group, 999)) %>%
df %>%
group = na_if(group, 999) %>%
df %>%
group = na_if(group, 999)
exists("gender")
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
exists("gender")
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
exists("gender")
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. score2 and score1 has many decimal places which need to be cut; 2. the data do not have id variable; 3. the missing values in the gender variable, coded by 999.
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999)
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999)
# recode gender variable 999 to NA (missing)
df %>%
gender = na_if(gender, 999) %>%
# insert a new variable "id"
df %>%
rownames_to_column('sbj_id')
