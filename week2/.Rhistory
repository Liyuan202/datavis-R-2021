options(digits = 4)
df
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert score2 to numeric values and delete score2
df <- df %>%
mutate(score2_num = as.numeric(score2)) %>%
select(-score2)
# rename score2_num to score2
rename(df, score2_num = score2)
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert score2 to numeric values and delete score2
df <- df %>%
mutate(score2_num = as.numeric(score2)) %>%
select(-score2)
# cut the decimal places of score2 and score1 to 2
options(digits = 4)
df
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2_num = factor(score2_num))
df
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2_num = factor(score2_num))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2 = factor(score2))
df
score_diff <- setdiff(score1, score2)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. the data do not have id variable which should be added; 2. the missing values in the gender variable coded by 999 which should be recoded to NA; 3. the variables need to change to factors.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2 = factor(score2))
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
score_diff <- setdiff(score1, score2)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2 = factor(score2))
score_diff <- setdiff(score1, score2)
score_diff <- (score1-score2)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. the data do not have id variable which should be added; 2. the missing values in the gender variable coded by 999 which should be recoded to NA; 3. the variables need to change to factors.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2 = factor(score2))
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
score_diff <- (score1-score2)
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
df %>%
order(group, gender, decreasing = FALSE,
method = c("auto", "shell", "radix"))
library(tidyverse)
library(lubridate) # for working with dates
set.seed(1)
df  <- tibble(group = sample(c(rep(1:4, each=12), rep(999,2))),
birthdate = c(seq(as.Date('1980/01/01'), as.Date('1990/01/01'), by="day")) %>% sample(50),
gender = sample(c('M', 'F'), 50, replace=TRUE),
attitude = sample(c('Strongly disagree', 'Disagree', 'Neither agree or disagree', 'Agree', 'Strongly agree'), 50, replace=TRUE))
df
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
df
# This chunk is to see the summary of the data
df %>% summary()
# The following chunks is to see each variable of the data
df %>%
distinct(gender)
df %>%
distinct(score1)
df %>%
distinct(score2)
# This chunk is to see the structure of the data
df %>% str()
# After exploring the data, the following things need to be corrected: 1. the data do not have id variable which should be added; 2. the missing values in the gender variable coded by 999 which should be recoded to NA; 3. the variables need to change to factors.
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert all variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = factor(score1), score2 = factor(score2))
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
df %>%
order(group, gender, decreasing = FALSE,
method = c("auto", "shell", "radix"))
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
# arrange by the number of the observations (ascending)
arrange(group, gender, asc(n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
# arrange by the number of the observations (ascending)
arrange(group, asc(n))
# count observations by group and gender
df %>%
count(group) %>%
df %>%
count(gender) %>%
df %>%
count(group, gender) %>%
# arrange by the number of the observations (ascending)
arrange(group, asc(n))
# count observations by group and gender
df %>%
count(group) %>%
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender)
# arrange by the number of the observations (ascending)
arrange(group, asc(n))
# arrange by the number of the observations (ascending)
arrange(gender, asc(n))
# arrange by the number of the observations (ascending)
df %>%
arrange(count(group, gender), asc(n))
# arrange by the number of the observations (ascending)
df %>%
arrange(group, gender, asc(n))
# arrange by the number of the observations (ascending)
df %>%
arrange(group, asc(n))
# arrange by the number of the observations (ascending)
df %>%
arrange(group, asce(n))
# arrange by the number of the observations (ascending)
df %>%
order(group, gender,decreasing=F,na.last=NA)
# arrange by the number of the observations (ascending)
order(group, gender,decreasing=F,na.last=NA)
score_diff <- (score1-score2)
score_diff <- abc(score1,score2)
score_diff <- setdiff(score1,score2)
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) + # x = Sepal.Length, y = Sepal.Width
geom_point()
df %>%
ggplot(aes(x = score1, y = score2)) +
geom_point()
df %>%
ggplot(aes(x = "score1 (10cm)", y = "score2 (6cm)")) +
geom_point()
df %>%
ggplot(aes(x = score1, y = score2, width = 10, height = 6) +
geom_point()
df %>%
ggplot(aes(x = score1, y = score2)) +
geom_point()
df %>%
count(group, gender)
df %>%
arrange(group, desc(n))
library(dplyr)
df %>%
count(group, gender)
df %>%
arrange(group, desc(n))
detach(package:tidyverse, unload=TRUE)
library(dplyr)
df %>%
count(group, gender)
df %>%
arrange(group, desc(n))
detach(package:tidyverse, unload=TRUE)
df %>%
count(group, gender)
df %>%
arrange(group, desc(n))
df %>%
count(group, gender) %>%
arrange(group, desc(n))
?arrange
df %>%
count(group, gender) %>%
arrange(group, gender, desc(n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
arrange(group, gender, desc(n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange(group, gender, desc(n))
score_diff <- setdiff(score1,score2)
df %>%
score_diff <- setdiff(score1,score2)
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange(group, gender, asc(n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange(group, gender, asce(n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange(group, gender, desc(n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange(group, gender, (n))
# count observations by group and gender
df %>%
count(group)
df %>%
count(gender)
df %>%
count(group, gender) %>%
# Arrange by the number of observations (ascending)
arrange(group, gender, (n))
df %>%
score_diff <- (score1 - score2)
df$score_diff <- df$score1 - df$score2
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# this chunk generates the data, and you can ignore it
set.seed(1)
df  <- tibble(group = sample(c(rep(1:2, each=30))),
gender = sample(c(rep(c('M', 'F'), 28), rep(999,4))),
score1 = rnorm(60, 18, 2),
score2 = as.character(runif(60, 0.7, 1.1)*score1))
# recode gender variable 999 to NA (missing)
df <- df %>%
mutate(gender = na_if(gender, 999))
# insert a new variable "id"
df <- df %>%
rownames_to_column('sbj_id')
# convert group and gender variables to factors
df <- df %>%
mutate(group = factor(group), gender = factor(gender), score1 = (score1), score2 = (score2))
df$score_diff <- df$score1 - df$score2
# convert score2 to numerical variable
df <- df %>%
mutate(score2_num = as.numeric(score2))
# create score_diff to contain difference between score1 and score2
df$score_diff <- df$score1 - df$score2
# convert score2 to numerical variable
df <- df %>%
mutate(score2_num = as.numeric(score2))
# create score_diff to contain difference between score1 and score2
df$score_diff <- df$score1 - df$score2_num
# convert score2 to numerical variable
df <- df %>%
mutate(score2_num = as.numeric(score2))
# create score_diff to contain difference between score1 and score2
df$score_diff <- df$score1 - df$score2_num
df %>%
distinct(score_diff)
df %>%
summarise(score1_mean = mean(score1),
score2_mean = mean(score2_num),
score_diff_mean = mean(score_diff),
n = n()) %>%
mutate(across(is_double, round, 2))
df %>%
group_by(group, gender) %>%
summarise(attitude_mean = mean(attitude_num),
attitude_median = median(attitude_num),
attitude_sd = sd(attitude_num),
n = n()) %>%
mutate(across(is_double, round, 2)) # this rounds the mean, median and sd to 2 decimals
df %>%
group_by(group, gender) %>%
summarise(attitude_mean = mean(attitude_num),
attitude_median = median(attitude_num),
attitude_sd = sd(attitude_num),
n = n()) %>%
mutate(across(is_double, round, 2))
df %>%
group_by(group, gender) %>%
summarise(attitude_mean = mean(attitude_num),
attitude_median = median(attitude_num),
attitude_sd = sd(attitude_num),
n = n()) %>%
df %>%
group_by(group, gender) %>%
summarise(attitude_mean = mean(attitude_num),
attitude_median = median(attitude_num),
attitude_sd = sd(attitude_num),
n = n())
df %>%
summarise(score1_mean = mean(score1),
score2_mean = mean(score2_num),
score_diff_mean = mean(score_diff),
n = n()) %>%
mutate(across(is_double, round, 2))
grouped_df <- df %>%
group_by(gender)
grouped_df %>%
summarise(score1_mean = mean(score1),
score2_mean = mean(score2_num),
score_diff_mean = mean(score_diff))
View(grouped_df)
